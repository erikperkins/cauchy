apiVersion: argoproj.io/v1alpha1
kind: EventSource
metadata:
  name: github
  namespace: argo-events
spec:
  service:
    ports:
      - port: 12000
        targetPort: 12000
  github:
    push:
      repositories:
        - owner: erikperkins
          names:
            - cauchy
      webhook:
        endpoint: /push
        port: "12000"
        method: POST
        url: http://argo.cauchy.link/webhook/github
      events:
        - "push"
      apiToken:
        name: github-access
        key: token
      insecure: true
      active: true
      contentType: json
# Uncomment to use secure webhook
#    example-secure:
#      port: "13000"
#      endpoint: "/secure"
#      method: "POST"
#      # k8s secret that contains the cert
#      serverCertSecret:
#        name: my-secret
#        key: cert-key
#      # k8s secret that contains the private key
#      serverKeySecret:
#        name: my-secret
#        key: pk-key
---
apiVersion: argoproj.io/v1alpha1
kind: WorkflowTemplate
metadata:
  name: git-dag
  namespace: argo-events
spec:
  entrypoint: whales
  volumes:
    - name: kaniko
      secret:
        secretName: kaniko
  volumeClaimTemplates:
    - metadata:
        name: workspace
      spec:
        accessModes: [ ReadWriteOnce ]
        resources:
          requests:
            storage: 1Gi
  ttlStrategy:
    secondsAfterSuccess: 60
    secondsAfterFailure: 600
  templates:
    - name: whales
      dag:
        tasks:
          - name: A
            template: clone
#          - name: B
#            template: test
#            dependencies: [A]
#          - name: C
#            template: whale
#            dependencies: [A]
#            arguments:
#              parameters:
#                - name: bloop
#                  value: "{{workflow.parameters.repository-fullname}}"
          - name: D
            template: build
            dependencies: [A]
    - name: whale
      container:
        image: docker/whalesay:latest
        command: [cowsay]
        args: ["{{inputs.parameters.bloop}}"]
      inputs:
        parameters:
          - name: bloop
    - name: clone
      container:
        image: alpine/git:latest
        volumeMounts:
          - name: workspace
            mountPath: /mnt/vol
        workingDir: /mnt/vol
        env:
          - name: GITHUB_TOKEN
            valueFrom:
              secretKeyRef:
                name: github-access
                key: token
        command: ['sh', '-xuce']
        args:
          - |
            git clone -v https://$GITHUB_TOKEN@github.com/"{{workflow.parameters.repository-fullname}}" app
            cd app
            git checkout "{{workflow.parameters.commit}}"
    - name: test
      container:
        image: elixir:1.14.3-slim
        volumeMounts:
          - name: workspace
            mountPath: /mnt/vol
        workingDir: /mnt/vol/app
        command: ['sh', '-xuce']
        args:
          - |
            mix local.hex --force
            mix local.rebar --force
            mix deps.get
            mix test --no-color
    - name: build
      container:
        image: gcr.io/kaniko-project/executor:latest
        volumeMounts:
          - name: workspace
            mountPath: /mnt/vol
          - name: kaniko
            mountPath: /kaniko/.docker
        workingDir: /mnt/vol/app
        args:
          - |
            --destination="{{workflow.parameters.repository-fullname}}":"{{workflow.parameters.commit}}"
          - |
            --destination="{{workflow.parameters.repository-fullname}}":latest
---
apiVersion: argoproj.io/v1alpha1
kind: Sensor
metadata:
  name: webhook
  namespace: argo-events
spec:
  template:
    serviceAccountName: operate-workflow-sa
  dependencies:
    - name: github-payload
      eventSourceName: github
      eventName: push
  triggers:
    - template:
        name: github-workflow-trigger
        argoWorkflow:
          operation: submit
          source:
            resource:
              apiVersion: argoproj.io/v1alpha1
              kind: Workflow
              metadata:
                generateName: github-
              spec:
                arguments:
                  parameters:
                    - name: repository-fullname
                      value: "repo"
                    - name: commit
                      value: "commit"
                workflowTemplateRef:
                  name: git-dag
          parameters:
            - src:
                dependencyName: github-payload
                dataKey: body.repository.full_name
              dest: spec.arguments.parameters.0.value
            - src:
                dependencyName: github-payload
                dataKey: body.after
              dest: spec.arguments.parameters.1.value
---
apiVersion: networking.k8s.io/v1
kind: Ingress
metadata:
  name: argo
  namespace: argo-events
  annotations:
    kubernetes.io/ingress.class: nginx
    nginx.ingress.kubernetes.io/rewrite-target: /$2
spec:
  rules:
    - host: argo.cauchy.link
      http:
        paths:
          - path: /webhook/github(/|$)(.*)
            pathType: Prefix
            backend:
              service:
                name: github-eventsource-svc
                port:
                  number: 12000
