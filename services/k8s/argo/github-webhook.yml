apiVersion: argoproj.io/v1alpha1
kind: EventSource
metadata:
  name: github
  namespace: argo-events
spec:
  service:
    ports:
      - port: 12000
        targetPort: 12000
  github:
    push:
      repositories:
        - owner: erikperkins
          names:
            - cauchy
      webhook:
        endpoint: /push
        port: "12000"
        method: POST
        url: http://argo.cauchy.link/webhook/github
      events:
        - "push"
      apiToken:
        name: github-access
        key: token
      insecure: true
      active: true
      contentType: json
# Uncomment to use secure webhook
#    example-secure:
#      port: "13000"
#      endpoint: "/secure"
#      method: "POST"
#      # k8s secret that contains the cert
#      serverCertSecret:
#        name: my-secret
#        key: cert-key
#      # k8s secret that contains the private key
#      serverKeySecret:
#        name: my-secret
#        key: pk-key
---
apiVersion: argoproj.io/v1alpha1
kind: WorkflowTemplate
metadata:
  name: git-dag
  namespace: argo-events
spec:
  entrypoint: whales
  templates:
    - name: whales
      dag:
        tasks:
          - name: A
            template: whale
            arguments:
              parameters:
                - name: bloop
                  value: "{{workflow.parameters.branch}}"
          - name: B
            template: whale
            dependencies: [A]
            arguments:
              parameters:
                - name: bloop
                  value: "{{workflow.parameters.repository-id}}"
          - name: C
            template: whale
            dependencies: [A]
            arguments:
              parameters:
                - name: bloop
                  value: "{{workflow.parameters.repository-fullname}}"
    - name: whale
      container:
        image: docker/whalesay:latest
        command: [cowsay]
        args: ["{{inputs.parameters.bloop}}"]
      inputs:
        parameters:
          - name: bloop
    - name: clone
      container:
        image: elixir:1.14.3-slim
        volumeMounts:
          - mountPath: /app
            name: work
        workingDir: /app
        command:
          - sh
          - -xuce
        args:
          - |
            git clone -v -b "{{workflow.parameters.branch}}" --single-branch --depth 1 "{{workflow.parameters.clone_url}}" .
---
apiVersion: argoproj.io/v1alpha1
kind: Sensor
metadata:
  name: webhook
  namespace: argo-events
spec:
  template:
    serviceAccountName: operate-workflow-sa
  dependencies:
    - name: github-payload
      eventSourceName: github
      eventName: push
  triggers:
    - template:
        name: github-workflow-trigger
        argoWorkflow:
          operation: submit
          source:
            resource:
              apiVersion: argoproj.io/v1alpha1
              kind: Workflow
              metadata:
                generateName: github-
              spec:
                arguments:
                  parameters:
                    - name: ref
                      value: "whale 0"
                    - name: repository-id
                      value: "whale 1"
                    - name: repository-fullname
                      value: "whale 2"
                    - name: branch
                      value: "main"
                    - name: clone_url
                      value: "url"
                workflowTemplateRef:
                  name: git-dag
          parameters:
            - src:
                dependencyName: github-payload
                dataKey: body.ref
              dest: spec.arguments.parameters.0.value
            - src:
                dependencyName: github-payload
                dataKey: body.repository.id
              dest: spec.arguments.parameters.1.value
            - src:
                dependencyName: github-payload
                dataKey: body.repository.full_name
              dest: spec.arguments.parameters.2.value
            - src:
                dependencyName: github-payload
                dataTemplate: |
                  {{ .Input.body.ref | splitList "/" | last }}
              dest: spec.arguments.parameters.3.value
            - src:
                dependencyName: github-payload
                dataKey: body.repository.clone_url
              dest: spec.arguments.parameters.4.value
---
apiVersion: networking.k8s.io/v1
kind: Ingress
metadata:
  name: argo
  namespace: argo-events
  annotations:
    kubernetes.io/ingress.class: nginx
    nginx.ingress.kubernetes.io/rewrite-target: /$2
spec:
  rules:
    - host: argo.cauchy.link
      http:
        paths:
          - path: /webhook/github(/|$)(.*)
            pathType: Prefix
            backend:
              service:
                name: github-eventsource-svc
                port:
                  number: 12000
